{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar initialState = {\n  name: \"yoo\",\n  age: 27,\n  password: \"babo\"\n};\n\nvar changeNickName = function changeNickName(data) {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data: data\n  };\n};\n\nvar rootReucer = function rootReucer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHANGE_NICKNAME\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n  }\n};\n\nexport default rootReucer;","map":{"version":3,"names":["initialState","name","age","password","changeNickName","data","type","rootReucer","state","action"],"sources":["/Users/yusunsang/Documents/유순상/study/제로초/nextjs-test/reducers/index.js"],"sourcesContent":["const initialState = {\n  name: \"yoo\",\n  age: 27,\n  password: \"babo\",\n};\n\nconst changeNickName = (data) => {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data: data,\n  };\n};\n\nconst rootReucer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHANGE_NICKNAME\":\n      return {\n        ...state,\n        name: action.data,\n      };\n  }\n};\nexport default rootReucer;\n"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE,KADa;EAEnBC,GAAG,EAAE,EAFc;EAGnBC,QAAQ,EAAE;AAHS,CAArB;;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;EAC/B,OAAO;IACLC,IAAI,EAAE,iBADD;IAELD,IAAI,EAAEA;EAFD,CAAP;AAID,CALD;;AAOA,IAAME,UAAU,GAAG,SAAbA,UAAa,GAAkC;EAAA,IAAjCC,KAAiC,uEAAzBR,YAAyB;EAAA,IAAXS,MAAW;;EACnD,QAAQA,MAAM,CAACH,IAAf;IACE,KAAK,iBAAL;MACE,uCACKE,KADL;QAEEP,IAAI,EAAEQ,MAAM,CAACJ;MAFf;EAFJ;AAOD,CARD;;AASA,eAAeE,UAAf"},"metadata":{},"sourceType":"module"}